@inherits View<FormModel>

<MxView IsLoading="IsLoading">
	<Actions>
		&nbsp;
		<OptionMenu>
			<Items>
				<OptionItem Text="Edit" OnClick="() => Edit()" />
				<OptionItem Text="Add step" OnClick="() => EditStep()" />
				<OptionItem Text="Add usage" OnClick="() => EditUsage()" />
			</Items>
		</OptionMenu>
	</Actions>
	<Body>
		<DataField Label="@I18n.Model.FormModel_Name" LabelSize="2">
			<Content>
				<strong>@Model.Name</strong>
			</Content>
		</DataField>
		@if (!string.IsNullOrEmpty(Model.Description))
		{
			<DataField Label="@I18n.Model.FormModel_Description" LabelSize="2">
				<Content>
					<strong>@Model.Description</strong>
				</Content>
			</DataField>
		}

		<Separator />

		<TelerikTabStrip @bind-ActiveTabIndex="@ActiveTabIndex">
			<TabStripTab Title="Steps">
				<TelerikGrid Data=@Model.Steps.OrderBy(x => x.Position)
							 Resizable="true"
							 Pageable="false"
							 RowDraggable="true"
							 SelectionMode="@GridSelectionMode.Multiple"
							 OnRowDrop="@(async (GridRowDropEventArgs<FormStepModel> args) => await StepDropAsync(args))">
					<GridColumns>
						<GridColumn Field=@nameof(FormStepModel.Position) Title="Step" Width="90%">
							<Template>
								@{
									var item = context as FormStepModel;
									<span># <strong>@item.Position</strong>- <strong>@item.Name (@item.Code)</strong></span>
									<Separator />
									<small>@I18n.Enums.Get(item.Type)</small>
								}
							</Template>
						</GridColumn>
						<GridColumn Width="10%">
							<Template>
								@{
									var item = context as FormStepModel;
									//<OptionMenu CssClass="min-col-width">
									//	<OptionItem Text="Details" OnClick="() => DetailStep(item)" />
									//	<OptionItem Text="Edit" OnClick="() => EditStep(item)" />
									//	<OptionItem Text="Delete" OnClick="async () => await DeleteAsync(item)" />
									//</OptionButton>
									<Button Icon="FontIcon.File" FillMode="@ThemeConstants.Button.FillMode.Link" OnClick="() => DetailStep(item)" />
									<Button Icon="FontIcon.Pencil" FillMode="@ThemeConstants.Button.FillMode.Link" OnClick="() => EditStep(item)" />
									<Button Icon="FontIcon.Trash" FillMode="@ThemeConstants.Button.FillMode.Link" OnClick="async () => await DeleteAsync(item)" />
								}
							</Template>
						</GridColumn>
					</GridColumns>
				</TelerikGrid>

			</TabStripTab>
			<TabStripTab Title="Usages">

				<TelerikListView TItem="FormUsageModel"
								 Data="Model.Usages"
								 Pageable="false">
					<Template>
						<Row>
							<Cell Size="12" CssClass="responsive-item">
								<div class="d-flex align-items-start">
									<div class="flex-grow-1">
										<OptionMenu>
											<Items>
												<OptionItem Text="Edit" OnClick="() => EditUsage(context)" />
												<OptionItem Text="Delete" OnClick="async () => await DeleteUsageAsync(context)" />
											</Items>
										</OptionMenu>
										<div class="mb-2">
											<strong class="ms-2">@I18n.Enums.Get(context.ApplicationType)</strong>
											<TelerikFontIcon Icon="FontIcon.ChevronRight" />
											<strong class="ms-1">@I18n.Enums.Get(context.PersonType)</strong>
										</div>
									</div>
								</div>
								<hr />
							</Cell>
						</Row>
					</Template>
				</TelerikListView>
			</TabStripTab>
		</TelerikTabStrip>

		<TelerikWindow Class="demo-window"
					   Width="70%"
					   Height="75%"
					   Modal="true"
					   Visible="_isStepWindowVisible">
			<WindowTitle>
				<strong>Step</strong>
			</WindowTitle>
			<WindowActions>
				<WindowAction Name="Save" Icon="FontIcon.Save" OnClick="async () => await SaveStepAsync()"></WindowAction>
				<WindowAction Name="Close" OnClick="() => { _isStepWindowVisible = false; }"></WindowAction>
			</WindowActions>
			<WindowContent>
				<form class="k-form k-form-md">
					<fieldset class="k-form-fieldset">
						<label class="k-form-field">
							<span>Name</span>
							<Separator />
							<TelerikTextBox @bind-Value="Step.Name" />
						</label>
						<label class="k-form-field">
							<span>Code</span>
							<Separator />
							<TelerikTextBox @bind-Value="Step.Code" />
						</label>
						<label class="k-form-field">
							<span>Type</span>
							<Separator />
							<TelerikDropDownList Data="EnumRule.GetVisibleStepTypes()"
												 Value="Step.Type"
												 ValueChanged="@((EnumStepType x) => OnStepTypeChange(x))"
												 ValueField="Id"
												 TextField="Name"
												 DefaultText=""
												 Width="70%">
							</TelerikDropDownList>
						</label>


						<label class="k-form-field">
							<span>Description</span>
							<Separator />
							<TelerikTextArea Class="textarea-class"
							@bind-Value="Step.Description" />
						</label>
					</fieldset>
				</form>
			</WindowContent>
		</TelerikWindow>


		<TelerikWindow Class="demo-window"
					   Width="30%"
					   Height="35%"
					   Modal="true"
					   Visible="_isUsageWindowVisible">
			<WindowTitle>
				<strong>Step</strong>
			</WindowTitle>
			<WindowActions>
				<WindowAction Name="Save" Icon="FontIcon.Save" OnClick="async () => await SaveUsageAsync()"></WindowAction>
				<WindowAction Name="Close" OnClick="() => { _isUsageWindowVisible = false; }"></WindowAction>
			</WindowActions>
			<WindowContent>
				<form class="k-form k-form-md">
					<fieldset class="k-form-fieldset">
						<label class="k-form-field">
							<span>Application type</span>
							<Separator />
							<TelerikDropDownList @bind-Value="@Usage.ApplicationType"
												 Data="EnumData.ApplicationTypeList"
												 ValueField="Id"
												 TextField="Name"
												 DefaultText=""
												 Width="70%">
							</TelerikDropDownList>
						</label>
						<label class="k-form-field">
							<span>Person type</span>
							<Separator />
							<TelerikDropDownList @bind-Value="@Usage.PersonType"
												 Data="EnumData.PersonTypeList"
												 ValueField="Id"
												 TextField="Name"
												 DefaultText=""
												 Width="70%">
							</TelerikDropDownList>
						</label>
					</fieldset>
				</form>
			</WindowContent>
		</TelerikWindow>
	</Body>
</MxView>